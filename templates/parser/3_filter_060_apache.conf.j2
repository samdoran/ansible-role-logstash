    # --- Apache logs --- #
    if "apache" in [tags] {
        # Drop stdout from processes run by apache
        if [message] =~ /^\s*\b\w+\b:/ { drop {} }

        # Add tags based on path. The paths are created based on rsyslog tags
        # by rsyslog.
        if [path] =~ /apache-access/ {
            mutate {
                add_tag => [ "access" ]
            }
        }

        if [path] =~ /apache-error/ {
            mutate {
                add_tag => [ "error" ]
            }
        }

        grok {
            patterns_dir => [ "/opt/logstash/patterns" ]
            match => [
                "message" , "%{APACHEACCESS}",
                "message" , "%{APACHEERROR}",
                "message" , "%{APACHESSLREQUEST}",
                "message" , "%{APACHESSLACCESS}",
                "message" , "%{APACHEREWRITE}"
            ]
        }

        useragent { source => "agent" }
        geoip { source => "clientip" }

        }
        }

        if "_grokparsefailure" not in [tags] {

            # Extract folder
            if [request] =~ /\/.*\// {
                grok { match => [ "request", "^/%{DATA:[file][folder]}/" ] }
            }

            # Extract filename
            if [request] =~ /^((\/.*?)+)?\/(.*?)$/ {
                grok { match => [ "request" , "^((/%{DATA})+)?/%{DATA:[file][name]}($|\?)" ] }
            }

            # Extract extension
            if [file][name] and [file][name] =~ /\./ {
                grok {
                    patterns_dir => [ "/opt/logstash/patterns" ]
                    match => [ "[file][name]" , "\.%{EXTENSION:[file][extension]}" ]
                }

                mutate { lowercase => [ "[file][extension]" ] }
            }

        }

        date {
            match => [ "eventtime",
                        "dd/MMM/yyyy:HH:mm:ss Z",
                        "dd/MMM/yyyy:HH:mm:ss -Z",
                        "yyyy/MM/dd HH:mm:ss",
                        "EEE MMM dd HH:mm:ss yyyy"
            ]
        }

        # Remove eventtime field
        mutate { remove_field => [ "eventtime" ] }
    }